// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sunny.Repository;

namespace Sunny.Repository.Migrations
{
    [DbContext(typeof(EfDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Sunny.Repository.DbModel.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CategoryName");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Sunny.Repository.DbModel.Passage", b =>
                {
                    b.Property<int>("PassageId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("LastEditTime");

                    b.Property<string>("Title");

                    b.HasKey("PassageId");

                    b.ToTable("Passage");
                });

            modelBuilder.Entity("Sunny.Repository.DbModel.PassageCategory", b =>
                {
                    b.Property<int>("PassageId");

                    b.Property<int>("CategoryId");

                    b.HasKey("PassageId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("PassageCategory");
                });

            modelBuilder.Entity("Sunny.Repository.DbModel.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AAA");

                    b.Property<string>("StudentName")
                        .HasMaxLength(15);

                    b.Property<string>("Test");

                    b.HasKey("StudentId");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("Sunny.Repository.DbModel.StudentAddress", b =>
                {
                    b.Property<int>("StudentAddressId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address1");

                    b.Property<string>("Country");

                    b.Property<string>("State");

                    b.Property<int>("StudentId");

                    b.Property<int>("Zipcode");

                    b.HasKey("StudentAddressId");

                    b.HasIndex("Zipcode")
                        .IsUnique();

                    b.ToTable("StudentAddress");
                });

            modelBuilder.Entity("Sunny.Repository.DbModel.PassageCategory", b =>
                {
                    b.HasOne("Sunny.Repository.DbModel.Category", "Category")
                        .WithMany("PassageCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sunny.Repository.DbModel.Passage", "Passage")
                        .WithMany("PassageCategories")
                        .HasForeignKey("PassageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sunny.Repository.DbModel.StudentAddress", b =>
                {
                    b.HasOne("Sunny.Repository.DbModel.Student", "Student")
                        .WithOne("Address")
                        .HasForeignKey("Sunny.Repository.DbModel.StudentAddress", "Zipcode")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
